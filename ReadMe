Teste T√©cnico para Programador Java Jr
Este projeto √© uma aplica√ß√£o desenvolvida com Spring Boot para gerenciar um cadastro de usu√°rios e emails, utilizando um banco de dados relacional. O sistema foi projetado para permitir o gerenciamento b√°sico de usu√°rios e emails, com controle de acesso baseado em privil√©gios administrativos.

üî® Funcionalidades do projeto
<b>Login:</b>
Permite o login de usu√°rios, sendo que apenas usu√°rios com o campo <code>eh_admin = true</code> podem acessar o sistema.

<b>CRUD de Usu√°rios:</b>

<code>Visualizar um usu√°rio espec√≠fico</code>.
<code>Listar todos os usu√°rios</code>.
<code>Criar um novo usu√°rio</code>.
<code>Alterar um usu√°rio existente</code>.
<code>Deletar um usu√°rio</code>.
<b>Obs.: Apenas usu√°rios administradores podem acessar esses endpoints.</b>
<b>Gerenciamento de Emails:</b>

<code>Visualizar os emails de um usu√°rio espec√≠fico</code>.
<code>Listar todos os emails de um usu√°rio</code>.
<code>Criar um novo email</code>.
<code>Deletar um email</code>.
<b>Obs.: Apenas usu√°rios administradores podem acessar esses endpoints.</b>
<b>Envio de Notifica√ß√µes por Email:</b>
Sempre que um email for cadastrado ou deletado, o sistema envia uma notifica√ß√£o para todos os administradores cadastrados, informando a a√ß√£o realizada e o CPF do usu√°rio associado.

‚úîÔ∏è T√©cnicas e tecnologias utilizadas
<code>Spring Boot</code>: Framework utilizado para o desenvolvimento da aplica√ß√£o.
<code>Spring Security</code>: Implementa√ß√£o de autentica√ß√£o e autoriza√ß√£o.
<code>Spring Data JPA</code>: Para intera√ß√£o com o banco de dados relacional.
<code>Spring Mail</code>: Para disparos de emails.
<code>JUnit 5</code> e <code>Mockito</code>: Para testes unit√°rios.
<code>H2 Database</code>: Banco de dados relacional para desenvolvimento e testes locais.
<code>PostgreeSQL</code>: Banco de dados relacional para desenvolvimento em produ√ß√£o.
<code>Docker</code>: (Opcional) Utilizado para criar um ambiente de execu√ß√£o isolado com <code>docker-compose</code>.
üìÅ Acesso ao projeto
Voc√™ pode acessar o c√≥digo fonte do projeto atrav√©s do reposit√≥rio GitHub:

https://github.com/seu-usuario/nome-do-repositorio

üõ†Ô∏è Abrir e rodar o projeto
Para executar o projeto localmente, siga as instru√ß√µes abaixo:

Clone o reposit√≥rio:

bash
Copy code
git clone https://github.com/seu-usuario/nome-do-repositorio.git
cd nome-do-repositorio
Configure o banco de dados no arquivo <code>application.properties</code>. O H2 est√° configurado para execu√ß√£o local, mas pode ser adaptado para qualquer banco relacional.

Compile e execute o projeto:

bash
Copy code
./mvnw spring-boot:run
Acesse a documenta√ß√£o da API (Swagger) em:

http://localhost:8080/swagger-ui.html

Docker (opcional)
Para executar o projeto com Docker:

Certifique-se de ter o Docker instalado.

Execute o comando para iniciar a aplica√ß√£o:

bash
Copy code
docker-compose up

