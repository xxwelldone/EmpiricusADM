
![Descri√ß√£o da Imagem](EmpiricusADMPresentation/EmpiricusADM.gif)

## PROJETO EMPIRICUS-ADM
Este √© um projeto realizado durante o processo seletivo do grupo Empiricus onde era necess√°rio gerar uma aplica√ß√£o desenvolvida com Spring Boot para gerenciar um cadastro de usu√°rios e emails, utilizando um banco de dados relacional, API de disparo de e-mails e prote√ß√£o de end-points com Spring Security, al√©m de realiza√ß√£o de testes unit√°rios com JUnit, Mockito no padr√£o triple A e BBD. O sistema foi projetado para permitir o gerenciamento b√°sico de usu√°rios e emails, com controle de acesso baseado em privil√©gios administrativos.

## Funcionalidades

Login

- Permite o login de usu√°rios, sendo que apenas usu√°rios com o campo eh_admin = true podem realizar inser√ß√µes, dele√ß√µes e requerir dados do sistema.

Usu√°rio

- A tabela usu√°rio deve conter os seguintes campos: id, nome, cpf, password, data_criacao, data_atualizacao, eh_admin

CRUD de Usu√°rios:

- Visualizar um usu√°rio espec√≠fico.
- Listar todos os usu√°rios.
- Criar um novo usu√°rio.
- Alterar um usu√°rio existente.
- Deletar um usu√°rio.

Obs.: Apenas usu√°rios administradores podem acessar esses endpoints.


E-mail

- A tabela e-mail deve conter os seguintes campos:id, email, data_criacao, data_atualizacao

CRUD de Email:

- Visualizar os e-mails de um usu√°rio espec√≠fico.
- Listar todos os e-mails de usu√°rios.
- Criar um novo e-mail.
- Deletar um e-mail.



## üìÅ Dependencias necess√°rias
- Docker Desktop (caso seja executado com container)
- Java 17
- PostgreeSQL (caso seja executado localmente, sem utilizar o Docker).
- IDE para rodar o projeto (Intellij √© recomendado).

## üìÅ Acesso ao projeto

- Para baixar o projeto do Github, j√° logado em sua conta Github, basta digitar no terminal da sua IDE:
```bash
 git clone https://github.com/xxwelldone/EmpiricusADM.git
```
## üõ†Ô∏è Abrir e rodar o projeto

- Utilizando uma IDE, voc√™ pode rodar diretamente com o bot√£o Run e sua IDE ser√° respons√°vel por executar o projeto (desde que tenha instalado Postgree, Java 17).
- Utilizando docker, execute o comando
```bash
docker-compose up
```
- Para acessar o Swagger do projeto, acesse:
```bash
http://localhost:8080/swagger-ui/index.html#/
```
A partir daqui ser√° necess√°rio se autenticar como usu√°rio eh_admin = true  para que seja poss√≠vel realizar as opera√ß√µes dos end-points.

Caso utilize um usu√°rio e senha que n√£o √© admin, o end-point te avisar√° que voc√™ n√£o √© um usu√°rio administrador.

Senhas e usu√°rios que n√£o estejam cadastrados no sistema ser√£o avisados durante o processo de execu√ß√£o de algum dos end-points.


 Qualquer d√∫vida, me chame no [LinkedIn](https://www.linkedin.com/in/wesley-menezes-625998193/)